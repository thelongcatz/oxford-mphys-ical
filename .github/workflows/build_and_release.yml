name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    # The building process is directly inspired by yt-dlp: https://github.org/yt-dlp/yt-dlp/.github/workflows/build.yml
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            # Last line a hack to add the Python directory to PATH
            CMD_DEPENDENCIES: >
                brew install coreutils &&
                python3 -m pip install -U --user pip setuptools wheel &&
                python3 -m pip install -U --user --no-binary :all: Pyinstaller -r requirements.txt &&
                echo "$(python3 -m pip show Pyinstaller | awk '/Location/{print $2}' | sed 's|/lib/python/site-packages||')/bin/" >> $GITHUB_PATH
            CMD_BUILD: pyinstaller --target-architecture universal2 --onefile --name oxford_mphys_ical_macos oxford_mphys_ical.py
            OUT_FILE_NAME: oxford_mphys_ical_macos
          - os: windows-latest
            TARGET: windows
            PYTHON_VERSION: '3.8'
            CMD_DEPENDENCIES: >
                python -m pip install -U pip setuptools wheel py2exe &&
                pip install -U "https://yt-dlp.github.io/Pyinstaller-Builds/x86_64/pyinstaller-5.8.0-py3-none-any.whl" -r requirements.txt
            CMD_BUILD: pyinstaller --onefile --name oxford_mphys_ical oxford_mphys_ical.py
            OUT_FILE_NAME: oxford_mphys_ical.exe
          - os: ubuntu-latest
            TARGET: linux
            PYTHON_VERSION: '3.10'
            CMD_DEPENDENCIES: pip install -U pip setuptools wheel Pyinstaller -r requirements.txt
            CMD_BUILD: pyinstaller --onefile --name oxford_mphys_ical_linux oxford_mphys_ical.py
            OUT_FILE_NAME: oxford_mphys_ical_linux
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
    - name: Setting up Python
      if: ${{ !contains(matrix.TARGET, 'macos') }}
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38
      with:
        python-version: ${{ matrix.PYTHON_VERSION }}
    - name: Install dependencies
      run: ${{ matrix.CMD_DEPENDENCIES }}
    - name: Build with pyinstaller for ${{ matrix.TARGET }}
      run: ${{ matrix.CMD_BUILD }}
    - name: Upload build as artifact
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
      with:
        name: ${{ matrix.OUT_FILE_NAME }}
        path: ./dist/${{ matrix.OUT_FILE_NAME }}

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download builds from artifacts
        uses: actions/download-artifact@b14cf4c92620c250e1c074ab0a5800e37df86765
        with:
          merge-multiple: true
      - name: Publish release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda
        with:
          files: |
            ${{ github.workspace }}/oxford_mphys_ical_linux
            ${{ github.workspace }}/oxford_mphys_ical.exe
            ${{ github.workspace }}/oxford_mphys_ical_macos
