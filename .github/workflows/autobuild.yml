name: Autobuild

on:
  workflow_dispatch:

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_DEPENDENCIES: >
                brew install coreutils &&
                python3 -m pip install -U --user pip setuptools wheel &&
                # We need to ignore wheels otherwise we break universal2 builds
                python3 -m pip install -U --user --no-binary :all: Pyinstaller -r requirements.txt
            CMD_BUILD: >
                pyinstaller --target-architecture universal2 --onefile --name oxford_mphys_ical_macos oxford_mphys_ical.py
            OUT_FILE_NAME: oxford_mphys_ical_macos
            ASSET_MIME: application/octet-stream
          - os: windows-latest
            TARGET: windows
            CMD_DEPENDENCIES: >
                python -m pip install -U pip setuptools wheel py2exe &&
                # yt-dlp build used for backwards compatibility
                pip install -U "https://yt-dlp.github.io/Pyinstaller-Builds/x86_64/pyinstaller-5.8.0-py3-none-any.whl" -r requirements.txt
            CMD_BUILD: pyinstaller --onefile --name oxford_mphys_ical oxford_mphys_ical.py
            OUT_FILE_NAME: oxford_mphys_ical.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: ubuntu-latest
            TARGET: linux
            CMD_DEPENDENCIES: pip install -U pip setuptools wheel Pyinstaller -r requirements.txt
            CMD_BUILD: pyinstaller --onefile --name oxford_mphys_ical_linux oxford_mphys_ical.py
            OUT_FILE_NAME: oxford_mphys_ical_linux
            ASSET_MIME: application/octet-stream
    steps:
    - uses: actions/checkout@v4
    - name: Setting up Python
      if: ${{ matrix.TARGET != "macos" }}
      uses: actions/setup-python@v4
      with:
        python-version: 3.10
    - name: Install dependencies
      run: ${{ matrix.CMD_DEPENDENCIES }}       
    - name: Build with pyinstaller for ${{ matrix.TARGET }}
      run: ${{ matrix.CMD_BUILD }}
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value        
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME }}
        asset_name: ${{ matrix.OUT_FILE_NAME }}
        asset_content_type: ${{ matrix.ASSET_MIME }}
