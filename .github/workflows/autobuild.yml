name: Autobuild

on:
  workflow_dispatch:

jobs:
  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_DEPENDENCIES: >
                brew install coreutils &&
                python3 -m pip install -U --user pip setuptools wheel &&
                # We need to ignore wheels otherwise we break universal2 builds
                python3 -m pip install -U --user --no-binary :all: Pyinstaller -r requirements.txt
            CMD_BUILD: >
                pyinstaller --target-architecture universal2 --onefile --name oxford_mphys_ical_macos oxford_mphys_ical.py
            OUT_FILE_NAME: oxford_mphys_ical_macos
          - os: windows-latest
            TARGET: windows
            PYTHON_VERSION: '3.8'
            CMD_DEPENDENCIES: >
                python -m pip install -U pip setuptools wheel py2exe &&
                # yt-dlp build used for backwards compatibility
                pip install -U "https://yt-dlp.github.io/Pyinstaller-Builds/x86_64/pyinstaller-5.8.0-py3-none-any.whl" -r requirements.txt
            CMD_BUILD: pyinstaller --onefile --name oxford_mphys_ical oxford_mphys_ical.py
            OUT_FILE_NAME: oxford_mphys_ical.exe
          - os: ubuntu-latest
            TARGET: linux
            PYTHON_VERSION: '3.10'
            CMD_DEPENDENCIES: pip install -U pip setuptools wheel Pyinstaller -r requirements.txt
            CMD_BUILD: pyinstaller --onefile --name oxford_mphys_ical_linux oxford_mphys_ical.py
            OUT_FILE_NAME: oxford_mphys_ical_linux
    steps:
    - uses: actions/checkout@v4
    - name: Setting up Python
      if: ${{ !contains(matrix.TARGET, 'macos') }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.PYTHON_VERSION }}
    - name: Install dependencies
      run: ${{ matrix.CMD_DEPENDENCIES }}       
    - name: Build with pyinstaller for ${{ matrix.TARGET }}
      run: ${{ matrix.CMD_BUILD }}
    - name: Upload build as artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.OUT_FILE_NAME }}
        path: ./dist/${{ matrix.OUT_FILE_NAME }}

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download builds from artifacts
        uses: actions/download-artifact@v3
        with:
          merge-multiple: true
      - name: Publish release
        uses: softprops/action-gh-release@v0.1.15
        with:
          files: |
            oxford_mphys_ical_linux
            oxford_mphys_ical.exe
            oxford_mphys_ical_macos
